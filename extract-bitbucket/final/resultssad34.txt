From now on don't put 127.0.0.1:8000 hardcoded in the code. Use HOSTNAME variable defined in the settings.py file for easier portability of the app when 
deploying on the user.

Abbhinav how is it that the doctor is deciding his consultation fee? According to the meeting with Hemanth Sir, I think this will be a default value or only amind should be able to fill this field..
Its the doctor's personal choice. He/She cam key it in and can change it as per his/her wishes. It is by default set to Rs. 450/- for consultation (9 credits) + Rs. 50/- i.e, 1 credit at the time of booking of the appointment. 

If you remember right, Sir asked us not to hardcode it, rather store it and retrieve, so that it can be dynamically changed later on as per the doctor.
Just to clear your early query, ofcourse the doctor should decide his/her own rates.
Fine, agreed you are right...
Temporarily, since the logic for callinprogress and calldone tags are pending, the patient will continuously receive calls from doctor irrespective of the status. Comment out this line to ignore that and continue with developing your parts.
Delete temp files once the folder isn't empty anymore.

Good.
If u are referring to the temp file in Week 16, it is removed..  
Please refrain from using tabs in the code as on code inspection no. of cases of mixed indentation is high in the code..
Pylint follows and checks for code defaults in accordance with PEP-8 standards. As such, there is no separate pylint standards. This is just for a correction & clarification of your commit message. 
Clone FIRST, then commit! DO NOT DIRECTLY COMMIT! ALL of my changes to the consultation logic have been erased! I have to rewrite it again! I Don't even have the old copy!
Which consultation logic are u refering to? According to diff done by bitbucket the changes that I have made are only visible..I don't understand which code was deleted..
Also while pushing the code I did not have to force push. It was already synced with master else it gives errors. If I did remove your consultation logic then why is it not shown in the diff done by bitbucket?  
Also If it is a force push, your commit in the commits page will grey out if the changes from there are removed(i.e. I make a force push to the code).
It was not on this commit that my code disappeared. It was there yesterday and all of a sudden, today it wasn't. There were a series of commits done by you, one of them must have over-written it. Its fine, i've added it back now.
After your last commit, I don't see anywhere the diff done by bitbucket shows my code making changes that could have overwritten your changes. Please comment if I am wrong. 
Dude, I wrote 2 consultation logics. The one i wrote initially, which was about a few hours older replaced the new one. 
I don't think that the files are auto generated. I keep them so that if any errors come in the code I'm working on I can always refer back to it. Henceforth please  don't delete any docview backup files and also the psychiatry-walk settings.py backup files. Further, if they do consume space then the same backup files are there in almost all apps(including login, vline, patientview, etc.). As they say "Better Safe than Sorry". As a matter of fact I have always created backup files and there is no autogenerated backup files.
Why are backup files of psychiatrywalk and docview deleted? That defeats the whole point of having a backup file. PLEASE DON'T DELETE other's backup files.. 
Backup files? You put your backup files in Tests? I wasn't aware of that. Sorry for that. Just use a separate branch henceforth. Given the slow net connection, i thought it would be easier cloning lesser data, rather than 100mb each time (which takes a lot of time).
I'm not talking of the Tests folder. In the files that you changed in this commit itself you have deleted backup files of docview forms, models, urls, etc. See the Files changed of this commit. Even backup of settings.py file of psychiatrywalk is deleted which should not be as during deploying the project I have to change the settings file. Hence, it would be better to have a backup file incase of and errors.
I only deleted the swap and pyc files which are pretty much useless. All of the originals are still there.
I am talking of the BACKUP FILES NOT THE ORIGINAL FILES, the files ending with ~ are the backup files which were deleted in this push are the files I am referring to..   
Source/HelloPsych/psychiatrywalk/docview/forms.py**~**,    
Source/HelloPsych/psychiatrywalk/docview/models.py**~**, etc.
The files ending with ~ are swap files. They denote the last change made on that file. As I dynamically edit it, the swap files change. The swap you have will be different from the ones I have. There is no harm in deleting them. They just consume space and make searching for keywords through directories difficult. Besides, they'll auto-generate again.  
Well okay, if it means so much to you, i'll not delete them. 
Don't worry about space(It will be in a few KBs). Once the final code freeze is done they will be deleted. I just want to ensure sufficient backup is done, when we change / add functionality via the code. The potential loss in the time is more important than to worry about trivial space being used by backup files.
Can i commit now?
yeah ok....sure...

Sorry for the force commit sharvil, didnt realise it would strip your commit, my bad.
All the changes made to prescription have been overwritten. Comments and Duration Fields added have been deleted. I don't understand the point of the force commit. Please realize this is a massive waste of time for others and is **unfair** on my part as I have already implemented the things that were again added in the subsequent commits.  
All the changes made to Email Templates and the fields added to prescription made by me are all but removed. **If u knew u were making force commit why did u do it?**   
Almost the same thing has now been added in subsequent commits. 
And also my last commit was stripped and not comment as refered to in your comment.
Further all the Email Templates were already added  in my commit added before this commit. I don't understand the point of forcefully overwriting the commit. 
While integrating, Vishal added your changes(on master) into his code rather than his changes on your code(master). So, I don't think anything is missing while running the app, is it?
Please explain the logic behind force push. 
^
A couple of the fields I made in the models in 2 apps were deleted. Please perform clone, syncdb, schemamigrations & migrate, after which you can start making your changes.
Apart from the doctor_comments field all the fields were already there and were being saved as per my last commit which was stripped.
This field has now been added to prescription + request_call model both. I don't understand the rationale behind it .
Yeah well, I had already added the fields and the synchronous logic for the doctor's comments box. It was temporarily being created at the time of the prescription entry. All that went missing.
That is alright then don't add to prescription model. Just add the field Request_call model and display later.    
In the implementation of prescription done you can from the form extract Doctor comments and save it to the request_call model instead of field redundancy. Anyways the comment shall be specific to a appointment so I guess, it is alright to put it in request_call model.    
Also since the doctor_comments field is not supposed to be displayed in the prescription, I think it is illogical to put it in prescription model. When the doctor is writing the prescription he can update his comments(in the request_call model).
Yeah, because the prescription object is not created at the time of the video consultation. If i create the prescription object, the call status will turn to 'Call-Done'. But, i don't want that to happen during a video consult. So, the doctor enters his comments at the time of the consult and that saves against that appointment. After the call is done, i pre-populate the comments for further editing in the prescription. 

I've thought this through because of the extra field. But, I just can't create the prescription object before the consultation is done. That will change the status tags logic of the entire system. 
But, the requirements say that it should be stored along with the prescription. The request_call is uneditable once the status flag is 'call done'. So, I don't want to tamper with that logic.
Which "fields" are you referring to?
Which requirement are you referring to? The document that Hemanth Sir provided puts no such constraint as to which model the comment must be put.
My bad, not stored, **retrieved. If the notes are stored only against the appointment in request_calls, then retrieving becomes more complicated. A few more parameters have to be passed. It can be done, but since everything is already working fine, why change it, especially 5 hrs before R2.
Most of these changes (Email Templates + changes in the prescription app) were added in the commit that I made which was deleted after Vishal's commit....
The changes I made are in the Doctor's Comments. I don't think you did that before, did you? I don't know anything about the Email Templates. What exactly is the problem here?
^**most** Sorry about the Email Template , my mistake.
Good Job Done..
Good Work!
